as integer) [Precision]
        ,   CAST(c.DATETIME_PRECISION as integer)[DateTimePrecision]
        ,   CAST(c.NUMERIC_SCALE as integer) [Scale]
        ,   c.COLLATION_CATALOG [CollationCatalog]
        ,   c.COLLATION_SCHEMA [CollationSchema]
        ,   c.COLLATION_NAME [CollationName]
        ,   c.CHARACTER_SET_CATALOG [CharacterSetCatalog]
        ,   c.CHARACTER_SET_SCHEMA [CharacterSetSchema]
        ,   c.CHARACTER_SET_NAME [CharacterSetName]
        ,   CAST(0 as bit) as [IsMultiSet]
        ,   CAST(columnproperty( object_id(quotename(c.TABLE_SCHEMA) + '.' + quotename(c.TABLE_NAME)), c.COLUMN_NAME, 'IsIdentity' ) as bit) as [IsIdentity]
        ,   CAST(columnproperty( object_id(quotename(c.TABLE_SCHEMA) + '.' + quotename(c.TABLE_NAME)), c.COLUMN_NAME, 'IsComputed' ) | CASE WHEN c.DATA_TYPE = 'timestamp' THEN 1 ELSE 0 END as bit) as [IsStoreGenerated]
        , c.COLUMN_DEFAULT as [Default]
        FROM
        INFORMATION_SCHEMA.ROUTINE_COLUMNS c
        INNER JOIN
        INFORMATION_SCHEMA.ROUTINES f ON
        c.TABLE_CATALOG = f.SPECIFIC_CATALOG AND
        c.TABLE_SCHEMA = f.SPECIFIC_SCHEMA   AND
        c.TABLE_NAME = f.SPECIFIC_NAME
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SProcedures" EntityType="Self.Procedure">
      <DefiningQuery>
        SELECT
        quotename(SPECIFIC_SCHEMA) + quotename(SPECIFIC_NAME) [Id]
        , SPECIFIC_CATALOG         [CatalogName]
        , SPECIFIC_SCHEMA          [SchemaName]
        , SPECIFIC_NAME            [Name]
        FROM
        INFORMATION_SCHEMA.ROUTINES
        WHERE
        NOT (ROUTINE_SCHEMA = 'dbo'
        AND ROUTINE_NAME LIKE 'dt[_]%'
        AND SUBSTRING(CAST(SERVERPROPERTY('productversion') as varchar(20)),1,1) = 8)
        AND (DATA_TYPE != 'TABLE' OR DATA_TYPE is null)
        AND ROUTINE_TYPE = 'PROCEDURE'
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SProcedureParameters" EntityType="Self.Parameter">
      <DefiningQuery>
        SELECT
        quotename(p.SPECIFIC_SCHEMA) + quotename(p.SPECIFIC_NAME) + quotename(p.PARAMETER_NAME) [Id]
        , quotename(p.SPECIFIC_SCHEMA) + quotename(p.SPECIFIC_NAME)                              [ParentId]
        , CASE -- trim off the @ symbol
        WHEN p.PARAMETER_NAME is null THEN NULL
        ELSE SUBSTRING(p.PARAMETER_NAME, 2, LEN(p.PARAMETER_NAME) )
        END   [Name]
        , p.ORDINAL_POSITION [Ordinal]
        , CASE
        WHEN p.DATA_TYPE in ('varchar', 'nvarchar', 'varbinary') and
        p.CHARACTER_MAXIMUM_LENGTH = -1 THEN
        p.DATA_TYPE + '(max)'
        ELSE
        p.DATA_TYPE
        END [TypeName]
        , p.CHARACTER_MAXIMUM_LENGTH [MaxLength]
        , CAST(p.NUMERIC_PRECISION as integer) [Precision]
        , CAST(p.DATETIME_PRECISION as integer) as [DateTimePrecision]
        , CAST(p.NUMERIC_SCALE as integer) [Scale]
        , p.COLLATION_CATALOG [CollationCatalog]
        , p.COLLATION_SCHEMA [CollationSchema]
        , p.COLLATION_NAME [CollationName]
        , p.CHARACTER_SET_CATALOG [CharacterSetCatalog]
        , p.CHARACTER_SET_SCHEMA [CharacterSetSchema]
        , p.CHARACTER_SET_NAME [CharacterSetName]
        , CAST(0 as bit) as [IsMultiSet]
        , p.PARAMETER_MODE   [Mode]
        , CAST(NULL as nvarchar(max)) [Default]
        FROM
        INFORMATION_SCHEMA.PARAMETERS p
        INNER JOIN INFORMATION_SCHEMA.ROUTINES r ON
        p.SPECIFIC_SCHEMA = r.SPECIFIC_SCHEMA AND
        p.SPECIFIC_NAME = r.SPECIFIC_NAME AND
        r.ROUTINE_TYPE = 'PROCEDURE'
        WHERE
        p.IS_RESULT = 'NO'
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SConstraints" EntityType="Self.Constraint">
      <DefiningQuery>
        SELECT
        quotename(tc.CONSTRAINT_SCHEMA) + quotename(tc.CONSTRAINT_NAME) [Id]
        , quotename(tc.TABLE_SCHEMA) + quotename(tc.TABLE_NAME) [ParentId]
        ,   tc.CONSTRAINT_NAME [Name]
        ,   tc.CONSTRAINT_TYPE [ConstraintType]
        ,   CAST(CASE tc.IS_DEFERRABLE WHEN 'NO' THEN 0 ELSE 1 END as bit) [IsDeferrable]
        ,   CAST(CASE tc.INITIALLY_DEFERRED WHEN 'NO' THEN 0 ELSE 1 END as bit) [IsInitiallyDeferred]
        FROM
        INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc
        WHERE tc.TABLE_NAME IS NOT NULL
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SCheckConstraints" EntityType="Self.CheckConstraint">
      <DefiningQuery>
        SELECT
        quotename(cc.CONSTRAINT_SCHEMA) + quotename(cc.CONSTRAINT_NAME) [Id]
        , cc.CHECK_CLAUSE [Expression]
        FROM
        INFORMATION_SCHEMA.CHECK_CONSTRAINTS cc
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SConstraintColumns" EntityType="Self.ConstraintColumn">
      <DefiningQuery>
        SELECT
        quotename(CONSTRAINT_SCHEMA) + quotename(CONSTRAINT_NAME) [ConstraintId]
        ,   quotename(TABLE_SCHEMA) + quotename(TABLE_NAME) + quotename(COLUMN_NAME) [ColumnId]
        FROM
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SForeignKeyConstraints" EntityType="Self.ForeignKeyConstraint">
      <DefiningQuery>
        SELECT
        quotename(rc.CONSTRAINT_SCHEMA) + quotename(rc.CONSTRAINT_NAME) [Id]
        , CAST(rc.UPDATE_RULE as nvarchar(11)) [UpdateRule]
        , CAST(rc.DELETE_RULE as nvarchar(11)) [DeleteRule]
        FROM
        INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc
      </DefiningQuery>
    </EntitySet>
  
    <EntitySet Name="SForeignKeys" EntityType="Self.ForeignKey">
      <DefiningQuery>
        SELECT
        quotename(SCHEMA_NAME(fk.schema_id)) + quotename(fk.name) + quotename(cast(fkc.constraint_column_id as nvarchar(30))) [Id]
        ,   quotename(SCHEMA_NAME(toSchema.schema_id)) + quotename(OBJECT_NAME(fk.referenced_object_id)) + quotename(toCol.name) [ToColumnId]
        ,   quotename(SCHEMA_NAME(fromSchema.schema_id)) + quotename(OBJECT_NAME(fk.parent_object_id)) + quotename(fromCol.name) [FromColumnId]
        ,   quotename(SCHEMA_NAME(fk.schema_id)) + quotename(fk.name) [ConstraintId]
        ,   fkc.constraint_column_id [Ordinal]
        FROM
        sys.foreign_keys fk
        INNER JOIN
        sys.foreign_key_columns fkc ON fkc.constraint_object_id = fk.object_id
        INNER JOIN
        sys.columns toCol ON fkc.referenced_column_id = toCol.column_id AND fkc.referenced_object_id = toCol.object_id /* PRIMARY KEY COLS*/
        INNER JOIN
        sys.columns fromCol ON fkc.parent_column_id = fromCol.column_id AND fkc.parent_object_id = fromCol.object_id /* FOREIGN KEY COLS*/
        INNER join
        sys.objects toSchema ON toSchema.object_id = fk.referenced_object_id
        INNER JOIN
        sys.objects fromSchema ON fromSchema.object_id = fk.parent_object_id
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SViewConstraints" EntityType="Self.ViewConstraint">
      <DefiningQuery>
        SELECT
        CAST(NULL as nvarchar(1))   [Id]
        , CAST(NULL as nvarchar(256)) [ParentId]
        , CAST(NULL as nvarchar(256)) [Name]
        , CAST(NULL as nvarchar(256)) [ConstraintType]
        , CAST(0 as bit) [IsDeferrable]
        , CAST(0 as bit) [IsInitiallyDeferred]
        , CAST(NULL as nvarchar(max)) [Expression]
        , CAST(NULL as nvarchar(11))  [UpdateRule]
        , CAST(NULL as nvarchar(11))  [DeleteRule]
        WHERE 1=2
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SViewConstraintColumns" EntityType="Self.ConstraintColumn">
      <DefiningQuery>
        SELECT
        CAST(NULL as nvarchar(1))     [ConstraintId]
        , CAST(NULL as nvarchar(max)) [ColumnId]  
        WHERE 1=2
      </DefiningQuery>
    </EntitySet>

    <EntitySet Name="SViewForeignKeys" EntityType="Self.ForeignKey">
      <DefiningQuery>
        SELECT
        CAST(NULL as nvarchar(1))    [Id]
        ,  CAST(NULL as nvarchar(max)) [ToColumnId]
        ,  CAST(NULL as nvarchar(max)) [FromColumnId]
        ,  CAST(NULL as nvarchar(1))   [ConstraintId]
        ,  0 [Ordinal]
        WHERE 1=2
      </DefiningQuery>
    </EntitySet>

    <AssociationSet Name="STableTableColumns" Association="Self.TableTableColumn" >
      <End Role="Parent" EntitySet="STables"/>
      <End Role="Column" EntitySet="STableColumns"/>
    </AssociationSet>
    <AssociationSet Name="STableConstraints" Association="Self.TableTableConstraint" >
      <End Role="Parent" EntitySet="STables"/>
      <End Role="Constraint" EntitySet="SConstraints"/>
    </AssociationSet>
    <AssociationSet Name="SConstraintConstraintColumns" Association="Self.ConstraintConstraintColumn" >
      <End Role="ConstraintColumn" EntitySet="SConstraintColumns"/>
      <End Role="Constraint" EntitySet="SConstraints"/>
    </AssociationSet>    
    <AssociationSet Name="SConstraintForeignKeys" Association="Self.ConstraintForeignKey" >
      <End Role="ForeignKey" EntitySet="SForeignKeys"/>
      <End Role="Constraint" EntitySet="SForeignKeyConstraints"/>
    </AssociationSet>
    <AssociationSet Name="SFromForeignKeyColumns" Association="Self.FromForeignKeyColumn" >
      <End Role="ForeignKey" EntitySet="SForeignKeys"/>
      <End Role="Column" EntitySet="STableColumns"/>
    </AssociationSet>
    <AssociationSet Name="SToForeignKeyColumns" Association="Self.ToForeignKeyColumn" >
      <End Role="ForeignKey" EntitySet="SForeignKeys"/>
      <End Role="Column" EntitySet="STableColumns"/>
    </AssociationSet>

    <AssociationSet Name="SViewViewColumns" Association="Self.ViewViewColumn" >
      <End Role="Parent" EntitySet="SViews"/>
      <End Role="Column" EntitySet="SViewColumns"/>
    </AssociationSet>
    <AssociationSet Name="SViewViewConstraints" Association="Self.ViewViewConstraint" >
      <End Role="Parent" EntitySet="SViews"/>
      <End Role="Constraint" EntitySet="SViewConstraints"/>
    </AssociationSet>
    <AssociationSet Name="SViewConstraintConstraintColumns" Association="Self.ViewConstraintConstraintColumn" >
      <End Role="ConstraintColumn" EntitySet="SViewConstraintColumns"/>
      <End Role="Constraint" EntitySet="SViewConstraints"/>
    </AssociationSet>
    <AssociationSet Name="SViewConstraintForeignKeys" Association="Self.ViewConstraintForeignKey" >
      <End Role="ForeignKey" EntitySet="SViewForeignKeys"/>
      <End Role="Constraint" EntitySet="SViewConstraints"/>
    </AssociationSet>
    <AssociationSet Name="SFromForeignKeyViewColumns" Association="Self.FromForeignKeyViewColumn" >
      <End Role="ForeignKey" EntitySet="SViewForeignKeys"/>
      <End Role="Column" EntitySet="SViewColumns"/>
    </AssociationSet>
    <AssociationSet Name="SToForeignKeyViewColumns" Association="Self.ToForeignKeyViewColumn" >
      <End Role="ForeignKey" EntitySet="SViewForeignKeys"/>
      <End Role="Column" EntitySet="SViewColumns"/>
    </AssociationSet>

    <AssociationSet Name="FunctionFunctionParameters" Association="Self.FunctionFunctionParameter">
      <End Role="Function" EntitySet="SFunctions"/>
      <End Role="Parameter" EntitySet="SFunctionParameters"/>
    </AssociationSet>
    <AssociationSet Name="FunctionFunctionReturnTableColumns" Association="Self.FunctionFunctionReturnTableColumn" >
      <End Role="Function" EntitySet="SFunctions"/>
      <End Role="Column" EntitySet="SFunctionReturnTableColumns"/>
    </AssociationSet>
    <AssociationSet Name="ProcedureProcedureParameters" Assoc