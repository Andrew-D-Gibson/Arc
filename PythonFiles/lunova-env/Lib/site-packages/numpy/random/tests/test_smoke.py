em_CDiagnostics_CIProcessDiskUsage_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.Diagnostics.IProcessDiskUsageReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Diagnostics.ProcessDiskUsageReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_Diagnostics_IProcessDiskUsageReport[] = L"Windows.System.Diagnostics.IProcessDiskUsageReport";
typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_ReadOperationCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_WriteOperationCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_OtherOperationCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_BytesReadCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_BytesWrittenCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        INT64* value);
    HRESULT (STDMETHODCALLTYPE* get_OtherBytesCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport* This,
        INT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReportVtbl;

interface __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_get_ReadOperationCount(This, value) \
    ((This)->lpVtbl->get_ReadOperationCount(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_get_WriteOperationCount(This, value) \
    ((This)->lpVtbl->get_WriteOperationCount(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_get_OtherOperationCount(This, value) \
    ((This)->lpVtbl->get_OtherOperationCount(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_get_BytesReadCount(This, value) \
    ((This)->lpVtbl->get_BytesReadCount(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_get_BytesWrittenCount(This, value) \
    ((This)->lpVtbl->get_BytesWrittenCount(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_get_OtherBytesCount(This, value) \
    ((This)->lpVtbl->get_OtherBytesCount(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessDiskUsageReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.Diagnostics.IProcessMemoryUsage
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Diagnostics.ProcessMemoryUsage
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_Diagnostics_IProcessMemoryUsage[] = L"Windows.System.Diagnostics.IProcessMemoryUsage";
typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetReport)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageVtbl;

interface __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_GetReport(This, value) \
    ((This)->lpVtbl->GetReport(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsage_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.Diagnostics.IProcessMemoryUsageReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 1.0
 *
 * Interface is a part of the implementation of type Windows.System.Diagnostics.ProcessMemoryUsageReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_Diagnostics_IProcessMemoryUsageReport[] = L"Windows.System.Diagnostics.IProcessMemoryUsageReport";
typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_NonPagedPoolSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PageFaultCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT32* value);
    HRESULT (STDMETHODCALLTYPE* get_PageFileSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PagedPoolSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PeakNonPagedPoolSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PeakPageFileSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PeakPagedPoolSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PeakVirtualMemorySizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PeakWorkingSetSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_PrivatePageCount)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_VirtualMemorySizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);
    HRESULT (STDMETHODCALLTYPE* get_WorkingSetSizeInBytes)(__x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport* This,
        UINT64* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReportVtbl;

interface __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_NonPagedPoolSizeInBytes(This, value) \
    ((This)->lpVtbl->get_NonPagedPoolSizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PageFaultCount(This, value) \
    ((This)->lpVtbl->get_PageFaultCount(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PageFileSizeInBytes(This, value) \
    ((This)->lpVtbl->get_PageFileSizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PagedPoolSizeInBytes(This, value) \
    ((This)->lpVtbl->get_PagedPoolSizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PeakNonPagedPoolSizeInBytes(This, value) \
    ((This)->lpVtbl->get_PeakNonPagedPoolSizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PeakPageFileSizeInBytes(This, value) \
    ((This)->lpVtbl->get_PeakPageFileSizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PeakPagedPoolSizeInBytes(This, value) \
    ((This)->lpVtbl->get_PeakPagedPoolSizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PeakVirtualMemorySizeInBytes(This, value) \
    ((This)->lpVtbl->get_PeakVirtualMemorySizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PeakWorkingSetSizeInBytes(This, value) \
    ((This)->lpVtbl->get_PeakWorkingSetSizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_PrivatePageCount(This, value) \
    ((This)->lpVtbl->get_PrivatePageCount(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_VirtualMemorySizeInBytes(This, value) \
    ((This)->lpVtbl->get_VirtualMemorySizeInBytes(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_get_WorkingSetSizeInBytes(This, value) \
    ((This)->lpVtbl->get_WorkingSetSizeInBytes(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CIProcessMemoryUsageReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000

/*
 *
 * Interface Windows.System.Diagnostics.ISystemCpuUsage
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.Diagnostics.SystemCpuUsage
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_Diagnostics_ISystemCpuUsage[] = L"Windows.System.Diagnostics.ISystemCpuUsage";
typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetReport)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageVtbl;

interface __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_GetReport(This, value) \
    ((This)->lpVtbl->GetReport(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.Diagnostics.ISystemCpuUsageReport
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.Diagnostics.SystemCpuUsageReport
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_Diagnostics_ISystemCpuUsageReport[] = L"Windows.System.Diagnostics.ISystemCpuUsageReport";
typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReportVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_KernelTime)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_UserTime)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);
    HRESULT (STDMETHODCALLTYPE* get_IdleTime)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport* This,
        struct __x_ABI_CWindows_CFoundation_CTimeSpan* value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReportVtbl;

interface __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReportVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_get_KernelTime(This, value) \
    ((This)->lpVtbl->get_KernelTime(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_get_UserTime(This, value) \
    ((This)->lpVtbl->get_UserTime(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_get_IdleTime(This, value) \
    ((This)->lpVtbl->get_IdleTime(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsageReport_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.Diagnostics.ISystemDiagnosticInfo
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.Diagnostics.SystemDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_Diagnostics_ISystemDiagnosticInfo[] = L"Windows.System.Diagnostics.ISystemDiagnosticInfo";
typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* get_MemoryUsage)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CISystemMemoryUsage** value);
    HRESULT (STDMETHODCALLTYPE* get_CpuUsage)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CISystemCpuUsage** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoVtbl;

interface __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_QueryInterface(This, riid, ppvObject) \
    ((This)->lpVtbl->QueryInterface(This, riid, ppvObject))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_AddRef(This) \
    ((This)->lpVtbl->AddRef(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_Release(This) \
    ((This)->lpVtbl->Release(This))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_GetIids(This, iidCount, iids) \
    ((This)->lpVtbl->GetIids(This, iidCount, iids))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_GetRuntimeClassName(This, className) \
    ((This)->lpVtbl->GetRuntimeClassName(This, className))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_GetTrustLevel(This, trustLevel) \
    ((This)->lpVtbl->GetTrustLevel(This, trustLevel))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_get_MemoryUsage(This, value) \
    ((This)->lpVtbl->get_MemoryUsage(This, value))

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_get_CpuUsage(This, value) \
    ((This)->lpVtbl->get_CpuUsage(This, value))

#endif /* COBJMACROS */

EXTERN_C const IID IID___x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo;
#endif /* !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo_INTERFACE_DEFINED__) */
#endif // WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000

/*
 *
 * Interface Windows.System.Diagnostics.ISystemDiagnosticInfoStatics
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 4.0
 *
 * Interface is a part of the implementation of type Windows.System.Diagnostics.SystemDiagnosticInfo
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x40000
#if !defined(____x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics_INTERFACE_DEFINED__)
#define ____x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Windows_System_Diagnostics_ISystemDiagnosticInfoStatics[] = L"Windows.System.Diagnostics.ISystemDiagnosticInfoStatics";
typedef struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStaticsVtbl
{
    BEGIN_INTERFACE

    HRESULT (STDMETHODCALLTYPE* QueryInterface)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics* This,
        REFIID riid,
        void** ppvObject);
    ULONG (STDMETHODCALLTYPE* AddRef)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics* This);
    ULONG (STDMETHODCALLTYPE* Release)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics* This);
    HRESULT (STDMETHODCALLTYPE* GetIids)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics* This,
        ULONG* iidCount,
        IID** iids);
    HRESULT (STDMETHODCALLTYPE* GetRuntimeClassName)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics* This,
        HSTRING* className);
    HRESULT (STDMETHODCALLTYPE* GetTrustLevel)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics* This,
        TrustLevel* trustLevel);
    HRESULT (STDMETHODCALLTYPE* GetForCurrentSystem)(__x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics* This,
        __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfo** value);

    END_INTERFACE
} __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStaticsVtbl;

interface __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStatics
{
    CONST_VTBL struct __x_ABI_CWindows_CSystem_CDiagnostics_CISystemDiagnosticInfoStaticsVtbl* lpVtbl;
};

#ifdef COBJMACROS

#define __x_ABI_CWindows_CSystem_CDiagnostics_CISystem