hod
  and builtins.open was set to OpenWrapper to not become a bound method when
  set to a class variable. _io.open is a built-in function whereas
  _pyio.open is a Python function. In Python 3.10, _pyio.open() is now a
  static method, and builtins.open() is now io.open().

- bpo-43680: The Python :func:`_pyio.open` function becomes a static method
  to behave as :func:`io.open` built-in function: don't become a bound
  method when stored as a class variable. It becomes possible since static
  methods are now callable in Python 3.10. Moreover,
  :func:`_pyio.OpenWrapper` becomes a simple alias to :func:`_pyio.open`.
  Patch by Victor Stinner.

- bpo-41515: Fix :exc:`KeyError` raised in :func:`typing.get_type_hints` due
  to synthetic modules that don't appear in ``sys.modules``.

- bpo-43776: When :class:`subprocess.Popen` args are provided as a string or
  as :class:`pathlib.Path`, the Popen instance repr now shows the right
  thing.

- bpo-42248: [Enum] ensure exceptions raised in ``_missing__`` are released

- bpo-43744: fix issue with enum member name matching the start of a private
  variable name

- bpo-43772: Fixed the return value of ``TypeVar.__ror__``. Patch by Jelle
  Zijlstra.

- bpo-43764: Add match_args parameter to @dataclass decorator to allow
  suppression of __match_args__ generation.

- bpo-43799: OpenSSL 3.0.0: define ``OPENSSL_API_COMPAT`` 1.1.1 to suppress
  deprecation warnings. Python requires OpenSSL 1.1.1 APIs.

- bpo-43478: Mocks can no longer be used as the specs for other Mocks. As a
  result, an already-mocked object cannot have an attribute mocked using
  ``autospec=True`` or be the subject of a ``create_autospec(...)`` call.
  This can uncover bugs in tests since these Mock-derived Mocks will always
  pass certain tests (e.g. :func:`isinstance`) and builtin assert functions
  (e.g. assert_called_once_with) will unconditionally pass.

- bpo-43794: Add :data:`ssl.OP_IGNORE_UNEXPECTED_EOF` constants (OpenSSL
  3.0.0)

- bpo-43785: Improve ``bz2.BZ2File`` performance by removing the RLock from
  BZ2File. This makes BZ2File thread unsafe in the face of multiple
  simultaneous readers or writers, just like its equivalent classes in
  :mod:`gzip` and :mod:`lzma` have always been.  Patch by Inada Naoki.

- bpo-43789: OpenSSL 3.0.0: Don't call the password callback function a
  second time when first call has signaled an error condition.

- bpo-43788: The header files for :mod:`ssl` error codes are now OpenSSL
  version-specific. Exceptions will now show correct reason and library
  codes. The ``make_ssl_data.py`` script has been rewritten to use OpenSSL's
  text file with error codes.

- bpo-43766: Implement :pep:`647` in the :mod:`typing` module by adding
  :data:`TypeGuard`.

- bpo-25264: :func:`os.path.realpath` now accepts a *strict* keyword-only
  argument. When set to ``True``, :exc:`OSError` is raised if a path doesn't
  exist or a symlink loop is encountered.

- bpo-43780: In ``importlib.metadata``, incorporate changes from
  importlib_metadata 3.10: Add mtime-based caching during distribution
  discovery. Flagged use of dict result from ``entry_points()`` as
  deprecated.

- The ``P.args`` and ``P.kwargs`` attributes of :class:`typing.ParamSpec`
  are now instances of the new classes :class:`typing.ParamSpecArgs` and
  :class:`typing.ParamSpecKwargs`, which enables a more useful ``repr()``.
  Patch by Jelle Zijlstra.

- bpo-43731: Add an ``encoding`` parameter :func:`logging.fileConfig()`.

- bpo-43712: Add ``encoding`` and ``errors`` parameters to
  :func:`fileinput.input` and :class:`fileinput.FileInput`.

- bpo-38659: A ``simple_enum`` decorator is added to the ``enum`` module to
  convert a normal class into an Enum. ``test_simple_enum`` added to test
  simple enums against a corresponding normal Enum.  Standard library
  modules updated to use ``simple_enum``.

- bpo-43764: Fix an issue where :data:`~object.__match_args__` generation
  could fail for some :mod:`dataclasses`.

- bpo-43752: Fix :mod:`sqlite3` regression for zero-sized blobs with
  converters, where ``b""`` was returned instead of ``None``. The regression
  was introduced by PR 24723. Patch by Erlend E. Aasland.

- bpo-43655: :mod:`tkinter` dialog windows are now recognized as dialogs by
  window managers on macOS and X Window.

- bpo-43723: The following ``threading`` methods are now deprecated and
  should be replaced:

  - ``currentThread`` => :func:`threading.current_thread`

  - ``activeCount`` => :func:`threading.active_count`

  - ``Condition.notifyAll`` => :meth:`threading.Condition.notify_all`

  - ``Event.isSet`` => :meth:`threading.Event.is_set`

  - ``Thread.setName`` => :attr:`threading.Thread.name`

  - ``thread.getName`` => :attr:`threading.Thread.name`

  - ``Thread.isDaemon`` => :attr:`threading.Thread.daemon`

  - ``Thread.setDaemon`` => :attr:`threading.Thread.daemon`

  Patch by Jelle Zijlstra.

- bpo-2135: Deprecate find_module() and find_loader() implementations in
  importlib and zipimport.

- bpo-43534: :func:`turtle.textinput` and :func:`turtle.numinput` create now
  a transient window working on behalf of the canvas window.

- bpo-43532: Add the ability to specify keyword-only fields to dataclasses.
  These fields will become keyword-only arguments to the generated __init__.

- bpo-43522: Fix problem with
  :attr:`~ssl.SSLContext.hostname_checks_common_name`. OpenSSL does not copy
  hostflags from *struct SSL_CTX* to *struct SSL*.

- bpo-8978: Improve error message for :func:`tarfile.open` when :mod:`lzma`
  / :mod:`bz2` are unavailable.  Patch by Anthony Sottile.

- bpo-42967: Allow :class:`bytes` ``separator`` argument in
  ``urllib.parse.parse_qs`` and ``urllib.parse.parse_qsl`` when parsing
  :class:`str` query strings. Previously, this raised a ``TypeError``.

- bpo-43296: Improve :mod:`sqlite3` error handling: ``sqlite3_value_blob()``
  errors that set ``SQLITE_NOMEM`` now raise :exc:`MemoryError`. Patch by
  Erlend E. Aasland.

- bpo-43312: New functions :func:`sysconfig.get_preferred_scheme` and
  :func:`sysconfig.get_default_scheme` are added to query a platform for its
  preferred "user", "home", and "prefix" (default) scheme names.

- bpo-43265: Improve :meth:`sqlite3.Connection.backup` error handling. The
  error message for non-existent target database names is now ``unknown
  database <database name>`` instead of ``SQL logic error``. Patch by Erlend
  E. Aasland.

- bpo-41282: Install schemes in :mod:`distutils.command.install` are now
  loaded from :mod:`sysconfig`.

- bpo-41282: :mod:`distutils.sysconfig` has been merged to :mod:`sysconfig`.

- bpo-43176: Fixed processing of a dataclass that inherits from a frozen
  dataclass with no fields.  It is now correctly detected as an error.

- bpo-43080: :mod:`pprint` now has support for
  :class:`dataclasses.dataclass`. Patch by Lewis Gaul.

- bpo-39950: Add `pathlib.Path.hardlink_to()` method that supersedes
  `link_to()`. The new method has the same argument order as `symlink_to()`.

- bpo-42904: :func:`typing.get_type_hints` now checks the local namespace of
  a class when evaluating :pep:`563` annotations inside said class.

- bpo-42269: Add ``slots`` parameter to ``dataclasses.dataclass`` decorator
  to automatically generate ``__slots__`` for class. Patch provided by Yurii
  Karabas.

- bpo-39529: Deprecated use of :func:`asyncio.get_event_loop` without
  running event loop. Emit deprecation warning for :mod:`asyncio` functions
  which implicitly create a :class:`~asyncio.Future` or
  :class:`~asyncio.Task` objects if there is no running event loop and no
  explicit *loop* argument is passed: :func:`~asyncio.ensure_future`,
  :func:`~asyncio.wrap_future`, :func:`~asyncio.gather`,
  :func:`~asyncio.shield`, :func:`~asyncio.as_completed` and constructors of
  :class:`~asyncio.Future`, :class:`~asyncio.Task`,
  :class:`~asyncio.StreamReader`, :class:`~asyncio.StreamReaderProtocol`.

- bpo-18369: Certificate and PrivateKey classes were added to the ssl
  module. Certificates and keys can now be loaded from memory buffer, too.

- bpo-41486: Use a new output buffer management code for :mod:`bz2` /
  :mod:`lzma` / :mod:`zlib` modules, and add ``.readall()`` function to
  ``_compression.DecompressReader`` class. These bring some performance
  improvements. Patch by Ma Lin.

- bpo-31870: The :func:`ssl.get_server_certificate` function now has a
  *timeout* parameter.

- bpo-41735: Fix thread locks in zlib module may go wrong in rare case.
  Patch by Ma Lin.

- bpo-36470: Fix dataclasses with ``InitVar``\s and
  :func:`~dataclasses.replace()`. Patch by Claudiu Popa.

- bpo-40849: Expose X509_V_FLAG_PARTIAL_CHAIN ssl flag

- bpo-35114: :func:`ssl.RAND_status` now returns a boolean value (as
  documented) instead of ``1`` or ``0``.

- bpo-39906: :meth:`pathlib.Path.stat` and :meth:`~pathlib.Path.chmod` now
  accept a *follow_symlinks* keyword-only argument for consistency with
  corresponding functions in the :mod:`os` module.

- bpo-39899: :func:`os.path.expanduser()` now refuses to guess Windows home
  directories if the basename of current user's home directory does not
  match their username.

  :meth:`pathlib.Path.expanduser()` and :meth:`~pathlib.Path.home()` now
  consistently raise :exc:`RuntimeError` exception when a home directory
  cannot be resolved. Previously a :exc:`KeyError` exception could be raised
  on Windows when the ``"USERNAME"``  environment variable was unset.

- bpo-36076: Added SNI support to :func:`ssl.get_server_certificate`.

- bpo-38490: Covariance, Pearson's correlation, and simple linear regression
  functionality was added to statistics module. Patch by Tymoteusz Wołodźko.

- bpo-33731: Provide a locale.localize() function, which converts a
  normalized number string into a locale format.

- bpo-32745: Fix a regression in the handling of ctypes'
  :data:`ctypes.c_wchar_p` type: embedded null characters would cause a
  :exc:`ValueError` to be raised. Patch by Zackery Spytz.

Documentation
-------------

- bpo-43987: Add "Annotations Best Practices" document as a new HOWTO.

- bpo-43977: Document the new :const:`Py_TPFLAGS_MAPPING` and
  :const:`Py_TPFLAGS_SEQUENCE` type flags.

- bpo-43959: The documentation on the PyContextVar C-API was clarified.

- bpo-43938: Update dataclasses documentation to express that
  FrozenInstanceError is derived from AttributeError.

- bpo-43778: Fix the Sphinx glossary_search extension: create the _static/
  sub-directory if it doesn't exist.

- bpo-43755: Update documentation to reflect that unparenthesized lambda
  expressions can no longer be the expression part in an ``if`` clause in
  comprehensions and generator expressions since Python 3.9.

- bpo-43739: Fixing the example code in Doc/extending/extending.rst to
  declare and initialize the pmodule variable to be of the right type.

Tests
-----

- bpo-43961: Fix test_logging.test_namer_rotator_inheritance() on Windows:
  use :func:`os.replace` rather than :func:`os.rename`. Patch by Victor
  Stinner.

- bpo-43842: Fix a race condition in the SMTP test of test_logging. Don't
  close a file descriptor (socket) from a different thread while
  asyncore.loop() is polling the file descriptor. Patch by Victor Stinner.

- bpo-43843: :mod:`test.libregrtest` now marks a test as ENV_CHANGED
  (altered the execution environment) if a thread raises an exception but
  does not catch it. It sets a hook on :func:`threading.excepthook`. Use
  ``--fail-env-changed`` option to mark the test as failed. Patch by Victor
  Stinner.

- bpo-43811: Tests multiple OpenSSL versions on GitHub Actions. Use ccache
  to speed up testing.

- bpo-43791: OpenSSL 3.0.0: Disable testing of legacy protocols TLS 1.0 and
  1.1. Tests are failing with TLSV1_ALERT_INTERNAL_ERROR.

Build
-----

- bpo-43567: Improved generated code refresh (AST/tokens/opcodes/keywords)
  on Windows.

- bpo-43669: Implement :pep:`644`. Python now requires OpenSSL 1.1.1 or
  newer.

Windows
-------

- bpo-35306: Adds additional arguments to :func:`os.startfile` function.

- bpo-43538: Avoid raising errors from :meth:`pathlib.Path.exists()` when
  passed an invalid filename.

- bpo-38822: Fixed :func:`os.stat` failing on inaccessible directories with
  a trailing slash, rather than falling back to the parent directory's
  metadata. This implicitly affected :func:`os.path.exists` and
  :func:`os.path.isdir`.

- bpo-26227: Fixed decoding of host names in :func:`socket.gethostbyaddr`
  and :func:`socket.gethostbyname_ex`.

- bpo-40432: Updated pegen regeneration script on Windows to find and use
  Python 3.8 or higher.  Prior to this, pegen regeneration already required
  3.8 or higher, but the script may have used lower versions of Python.

- bpo-43745: Actually updates Windows release to OpenSSL 1.1.1k. Earlier
  releases were mislabelled and actually included 1.1.1i again.

- bpo-43652: Update Tcl and Tk to 8.6.11 in Windows installer.

- bpo-43492: Upgrade Windows installer to use SQLite 3.35.5.

- bpo-30555: Fix ``WindowsConsoleIO`` errors in the presence of fd
  redirection. Patch by Segev Finer.

macOS
-----

- bpo-42119: Fix check for macOS SDK paths when building Python. Narrow
  search to match contents of SDKs, namely only files in
  ``/System/Library``, ``/System/IOSSupport``, and ``/usr`` other than
  ``/usr/local``. Previously, anything under ``/System`` was assumed to be
  in an SDK which causes problems with the new file system layout in 10.15+
  where user file systems may appear to be mounted under ``/System``.  Paths
  in ``/Library`` were also incorrectly treated as SDK locations.

- bpo-43568: Drop support for MACOSX_DEPLOYMENT_TARGET < 10.3

- bpo-44009: Provide "python3.x-intel64" executable to allow reliably
  forcing macOS universal2 framework builds to run under Rosetta 2 Intel-64
  emulation on Apple Silicon Macs.  This can be useful for testing or when
  universal2 wheels are not yet available.

- bpo-43851: Build SQLite with ``SQLITE_OMIT_AUTOINIT`` on macOS. Patch by
  Erlend E. Aasland.

- bpo-43492: Update macOS installer to use SQLite 3.35.4.

- bpo-42235: ``Mac/BuildScript/build-installer.py`` will now use
  "--enable-optimizations" and ``--with-lto`` when building on macOS 10.15
  or later.

IDLE
----

- bpo-37903: Add mouse actions to the shell sidebar.  Left click and
  optional drag selects one or more lines, as with the editor line number
  sidebar.  Right click after selecting raises a context menu with 'copy
  with prompts'.  This zips together prompts from the sidebar with lines
  from the selected text.

- bpo-43981: Fix reference leak in test_sidebar and test_squeezer. Patches
  by Terry Jan Reedy and Pablo Galindo

- bpo-37892: Indent IDLE Shell input with spaces instead of tabs

- bpo-43655: IDLE dialog windows are now recognized as dialogs by window
  managers on macOS and X Window.

- bpo-37903: IDLE's shell now shows prompts in a separate side-bar.

C API
-----

- bpo-43916: Add a new :c:data:`Py_TPFLAGS_DISALLOW_INSTANTIATION` type flag
  to disallow creating type instances. Patch by Victor Stinner.

- bpo-43774: Remove the now unused ``PYMALLOC_DEBUG`` macro. Debug hooks on
  memory allocators are now installed by default if Python is built in debug
  mode (if ``Py_DEBUG`` macro is defined). Moreover, they can now be used on
  Python build in release mode (ex: using ``PYTHONMALLOC=debug`` environment
  variable).

- bpo-43962: _PyInterpreterState_IDIncref() now calls
  _PyInterpreterState_IDInitref() and always increments id_refcount.
  Previously, calling _xxsubinterpreters.get_current() could create an
  id_refcount inconsistency when a _xxsubinterpreters.InterpreterID object
  was deallocated. Patch by Victor Stinner.

- bpo-28254: Add new C-API functions to control the state of the garbage
  collector: :c:func:`PyGC_Enable()`, :c:func:`PyGC_Disable()`,
  :c:func:`PyGC_IsEnabled()`, corresponding to the functions in the
  :mod:`gc` module.

- bpo-43908: Introduce :const:`Py_TPFLAGS_IMMUTABLETYPE` flag for immutable
  type objects, and modify :c:func:`PyType_Ready` to set it for static
  types. Patch by Erlend E. Aasland.

- bpo-43795: :c:func:`PyMem_Calloc` is now available in the limited C API
  (``Py_LIMITED_API``).

- bpo-43868: :c:func:`PyOS_ReadlineFunctionPointer` is no longer exported by
  limited C API headers and by ``python3.dll`` on Windows. Like any function
  that takes ``FILE*``, it is not part of the stable ABI.

- bpo-43795: Stable ABI and limited API definitions are generated from a
  central manifest (:pep:`652`).

- bpo-43753: Add the :c:func:`Py_Is(x, y) <Py_Is>` function to test if the
  *x* object is the *y* object, the same as ``x is y`` in Python. Add also
  the :c:func:`Py_IsNone`, :c:func:`Py_IsTrue`, :c:func:`Py_IsFalse`
  functions to test if an object is, respectively, the ``None`` singleton,
  the ``True`` singleton or the ``False`` singleton. Patch by Victor
  Stinner.


What's New in Python 3.10.0 alpha 7?
====================================

*Release date: 2021-04-05*

Security
--------

- bpo-42988: CVE-2021-3426: Remove the ``getfile`` feature of the
  :mod:`pydoc` module which could be abused to read arbitrary files on the
  disk (directory traversal vulnerability). Moreover, even source code of
  Python modules can contain sensitive data like passwords. Vulnerability
  reported by David Schwörer.

- bpo-43285: :mod:`ftplib` no longer trusts the IP address value returned
  from the server in response to the PASV command by default.  This prevents
  a malicious FTP server from using the response to probe IPv4 address and
  port combinations on the client network.

  Code that requires the former vulnerable behavior may set a
  ``trust_server_pasv_ipv4_address`` attribute on their :class:`ftplib.FTP`
  instances to ``True`` to re-enable it.

- bpo-43439: Add audit hooks for :func:`gc.get_objects`,
  :func:`gc.get_referrers` and :func:`gc.get_referents`. Patch by Pablo
  Galindo.

Core and Builtins
-----------------

- bpo-27129: Update CPython bytecode magic number.

- bpo-43672: Raise ImportWarning when calling find_loader().

- bpo-43660: Fix crash that happens when replacing ``sys.stderr`` with a
  callable that can remove the object while an exception is being printed.
  Patch by Pablo Galindo.

- bpo-27129: The bytecode interpreter uses instruction, rather byte, offsets
  internally. This reduces the number of EXTENDED_ARG instructions needed
  and streamlines instruction dispatch a bit.

- bpo-40645: Fix reference leak in the :mod:`_hashopenssl` extension. Patch
  by Pablo Galindo.

- bpo-42134: Calls to find_module() by the import system now raise
  ImportWarning.

- bpo-41064: Improve the syntax error for invalid usage of double starred
  elements ('**') in f-strings. Patch by Pablo Galindo.

- bpo-43575: Speed up calls to ``map()`` by using the :pep:`590`
  ``vectorcall`` calling convention. Patch by Dong-hee Na.

- bpo-42137: The import system now prefers using ``__spec__`` for
  ``ModuleType.__repr__`` over ``module_repr()``.

- bpo-43452: Added micro-optimizations to ``_PyType_Lookup()`` to improve
  cache lookup performance in the common case of cache hits.

- bpo-43555: Report the column offset for :exc:`SyntaxError` for invalid
  line continuation characters. Patch by Pablo Galindo.

- bpo-43517: Fix misdetection of circular imports when using ``from pkg.mod
  import attr``, which caused false positives in non-trivial multi-threaded
  code.

- bpo-43497: Emit SyntaxWarnings for assertions with tuple constants, this
  is a regression introduced in python3.7

- bpo-39316: Tracing now has correct line numbers for attribute accesses
  when the attribute is on a different line from the object. Improves
  debugging and profiling for multi-line method chains.

- bpo-35883: Python no longer fails at startup with a fatal error if a
  command line ar